/// Represents a single meditation session record.
class MeditationSession {
  final int? id; // Nullable because it's auto-generated by the database
  final DateTime sessionDateTime;
  final int durationSeconds;
  final String? notes; // Nullable notes field

  MeditationSession({
    this.id,
    required this.sessionDateTime,
    required this.durationSeconds,
    this.notes,
  });

  /// Converts this MeditationSession instance into a Map.
  /// The keys must correspond to the names of the columns in the database.
  Map<String, dynamic> toMap() {
    return {
      'id': id,
      // Store DateTime as ISO8601 string for database compatibility
      'sessionDateTime': sessionDateTime.toIso8601String(),
      'durationSeconds': durationSeconds,
      'notes': notes,
    };
  }

  /// Creates a MeditationSession instance from a Map (typically from database).
  factory MeditationSession.fromMap(Map<String, dynamic> map) {
    return MeditationSession(
      id: map['id'] as int?, // Cast might be needed depending on DB return type
      // Parse ISO8601 string back to DateTime
      sessionDateTime: DateTime.parse(map['sessionDateTime'] as String),
      durationSeconds: map['durationSeconds'] as int,
      notes: map['notes'] as String?,
    );
  }

  // Optional: Override toString for easier debugging
  @override
  String toString() {
    return 'MeditationSession{id: $id, sessionDateTime: $sessionDateTime, durationSeconds: $durationSeconds, notes: $notes}';
  }

  // Optional: Implement copyWith for easier updates
  MeditationSession copyWith({
    int? id,
    DateTime? sessionDateTime,
    int? durationSeconds,
    String? notes,
  }) {
    return MeditationSession(
      id: id ?? this.id,
      sessionDateTime: sessionDateTime ?? this.sessionDateTime,
      durationSeconds: durationSeconds ?? this.durationSeconds,
      notes: notes ?? this.notes,
    );
  }
}